<?php

/**
 * @file
 * Provides an Virtual Tour Effect field formatter for Image fields.
 *
 * This module provides a field formatter that allows users to specify an image
 * style to display, and another image style to use as the virtual tour effect version of the
 * image.
 */

use Drupal\image\Entity\ImageStyle;

/**
 * Implements hook_theme().
 */
function virtual_tour_theme($existing, $type, $theme, $path) {
  return [
    'virtual_tour' => [
      'variables' => [
        'item' => NULL,
        'display_style' => NULL,
        'settings' => NULL,
        'virtual_tour_autoload' => NULL,
      ],
      'template' => 'virtual-tour',
    ],
  ];
}

/**
 * Preprocess function for virtual_tour.
 */
function template_preprocess_virtual_tour(&$variables) {
  static $index = 0;
  $item = $variables['item'];

  if ($variables['display_style']) {

    $variables['image'] = ImageStyle::load($variables['display_style'])->buildUrl($item->entity->getFileUri());
    $image = Drupal::service('image.factory')->get($variables['image']);
  }
  else {
    $variables['image'] = file_create_url($item->entity->getFileUri());
  }

  $variables['effectType'] = $variables['settings']['type'];
  $variables['autoload'] = $variables['virtual_tour_autoload'] ? : 0;
  $variables['alt'] = $item->alt;
  $variables['id'] = $variables['settings']['id'] . $variables['item']->getValue()['target_id'];
  $variables['title'] = $item->title;

  // Attaching a image src and autoload variables with drupalsettings.
  $variables['#attached']['drupalSettings']['virtual_tour'][$index]['id'] = $variables['id'];
  $variables['#attached']['drupalSettings']['virtual_tour'][$index]['src'] = $variables['image'];
  $variables['#attached']['drupalSettings']['virtual_tour'][$index]['autoload'] = $variables['autoload'];
  $index = 1 + $index;
}
